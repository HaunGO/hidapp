/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "NHnr");
/******/ })
/************************************************************************/
/******/ ({

/***/ "NHnr":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no exports provided */
/*! all exports used */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__abi_js__ = __webpack_require__(/*! ./abi.js */ \"tlnb\");\nconsole.log('Hi dApp! ');\n\n\n// const address = \"\";//\"0xd41c8c355C44087Dec5EA3dC1406c88022197122\";//\"0x70b1E0a47CE9095fe6d7ffa88FD1e792c9E59C8f\";\n\nvar web3 = new Web3(Web3.givenProvider);\nvar myContract;\nvar account;\n\n$(document).ready(function () {\n\n    var contractBalance = 0;\n\n    var sayHelloButton = document.getElementById('sayHello-button');\n    var sayHelloLabel = document.getElementById('sayHelloSpan');\n\n    var getPersonButton = document.getElementById('getPersonButton');\n    var getPersonLabel = document.getElementById('getPersonSpan');\n\n    var createName = document.getElementById('createName');\n    var createNumber = document.getElementById('createNumber');\n    var createLabel = document.getElementById('createSpan');\n    var createButton = document.getElementById('createButton');\n\n    var getCreatorLabel = document.getElementById('getCreatorSpan');\n    var getCreatorButton = document.getElementById('getCreatorButton');\n\n    var newestLabel = document.getElementById('newestSpan');\n    var peopleList = document.getElementById('peopleList');\n\n    var connectButton = document.getElementById('connectToDapp');\n\n    connectButton.addEventListener('click', function () {\n        window.ethereum.enable().then(function (accounts) {\n            connectAccounts(accounts);\n            connectButton.style.display = 'none';\n            document.body.classList.add('connectedToNetwork');\n        });\n    });\n\n    function connectAccounts(accounts) {\n\n        account = accounts[0];\n\n        myContract = new web3.eth.Contract(__WEBPACK_IMPORTED_MODULE_0__abi_js__[\"a\" /* abi */], __WEBPACK_IMPORTED_MODULE_0__abi_js__[\"b\" /* address */], { from: accounts[0] });\n        console.log(myContract._address);\n        console.log(myContract.methods);\n\n        document.getElementById('addressSpan').innerHTML = \"<a href='https://ropsten.etherscan.io/address/\" + myContract._address + \"' target='_blank' >\" + myContract._address + \"</a>\";\n\n        sayHelloButton.addEventListener('click', function () {\n            console.log('say hello click');\n            myContract.methods.sayHello().call().then(function (result) {\n                console.log(result);\n                sayHelloLabel.innerHTML = result;\n            }).catch(console.log);\n        });\n\n        getPersonButton.addEventListener('click', function () {\n            console.log('get person click');\n            myContract.methods.getPerson().call().then(function (result) {\n                getPersonLabel.innerHTML = result.name + ' ' + result.number;\n            }).catch(console.log);\n        });\n\n        getCreatorButton.addEventListener('click', function () {\n            console.log('get creator click');\n\n            myContract.methods.getCreator(0).call().then(function (result) {\n                console.log(result);\n                getCreatorLabel.innerHTML = result;\n            }).catch(console.log);\n        });\n\n        myContract.events.personCreated({}, function (error, event) {\n            console.log('~~~~~~~~~~~~~ PERSON CREATED EVENT ~~~~~~~~~~~~');\n            console.log(event);\n            console.log(event.returnValues.name);\n            newestLabel.innerHTML = event.returnValues.name + ' ' + event.returnValues.number;\n\n            var info = \"<a href='https://ropsten.etherscan.io/tx/\" + event.returnValues.transactionHash + \"' target='_blank' >\" + event.returnValues.name + \" \" + event.returnValues.number + \"</a>\";\n            addToList(info);\n            reflectBalance();\n        });\n\n        myContract.getPastEvents('personCreated', { fromBlock: 0, toBlock: 'latest' }, function (error, event) {}).then(function (event) {\n            console.log(event);\n            var n = event.length;\n            for (var i = 0; i < n; i++) {\n                // console.log(event[i].returnValues.name, event[i].returnValues.number);\n                var info = \"<a href='https://ropsten.etherscan.io/tx/\" + event[i].transactionHash + \"' target='_blank' >\" + event[i].returnValues.name + \" \" + event[i].returnValues.number + \"</a>\";\n                addToList(info);\n            }\n        }).catch(console.log);\n\n        function addToList(info) {\n            var li = document.createElement(\"li\");\n            li.innerHTML = info;\n            peopleList.insertBefore(li, peopleList.firstChild);\n        }\n\n        TweenMax.set(\"#transactionLoader\", { opacity: 0 });\n\n        createButton.addEventListener('click', function () {\n            console.log('create person click');\n            var isValid = false;\n            if (createName.value != '' && createNumber.value != '') {\n                isValid = true;\n                TweenMax.to(\"#transactionLoader\", 0.2, { opacity: 1 });\n            } else {\n                console.log('give me a name and number, bozo.');\n            }\n            if (isValid) {\n                var weiValue = Web3.utils.toWei('0.1', 'ether');\n                myContract.methods.createPerson(createName.value, createNumber.value).send({ 'value': weiValue }).on('transactionHash', function (hash) {\n                    console.log(hash);\n                    // loader animation\n                    TweenMax.fromTo(\"#transactionLoader\", 2, { rotation: 0 }, { rotation: 360, repeat: -1, ease: Power1.easeInOut, yoyo: true });\n                }).on('receipt', function (receipt) {\n                    console.log(\"on receipt\", receipt);\n                    TweenMax.to(\"#transactionLoader\", 0.3, { rotation: 0, opacity: 0 });\n                    reflectBalance();\n                    myContract.methods.getPerson().call().then(function (result) {\n                        console.log(result.name);\n                        createLabel.innerHTML = result.name + ' ' + result.number;\n                    });\n                }).on('error', function (error, receipt) {\n                    // If the transaction was rejected by the network with a receipt, the second parameter will be the receipt.\n                    console.log(error, receipt);\n                });\n            }\n        });\n\n        document.getElementById('withdrawButton').addEventListener('click', function () {\n            console.log('withdraw the funds !');\n            TweenMax.to(\"#withdrawLoader\", 0.2, { opacity: 1 });\n            TweenMax.fromTo(\"#withdrawLoader\", 2, { rotation: 0 }, { rotation: 360, repeat: -1, ease: Power1.easeInOut, yoyo: true });\n            myContract.methods.withdrawAll().send().then(function (result) {\n                TweenMax.to(\"#withdrawLoader\", 0.3, { rotation: 0, opacity: 0 });\n                console.log(result);\n                reflectBalance();\n                document.getElementById('withdrawSpan').innerHTML = contractBalance + ' ETH has been withdrawn from contract into the creators address.';\n            }).catch(function (err) {\n                TweenMax.to(\"#withdrawLoader\", 0.3, { rotation: 0, opacity: 0 });\n                document.getElementById('withdrawSpan').innerHTML = 'Only the contract creator can withdraw these funds.';\n                console.log('//   you crazy.. i dont know who you think you are, but aint no way you comin up in here claimin all these funds without proper credentials.');\n                console.log(err);\n            });\n        });\n\n        function reflectBalance() {\n            // This returns value in WEI\n            myContract.methods.balance().call().then(function (result) {\n                var value = Web3.utils.fromWei(result, 'ether');\n                // console.log(value + ' ETH');\n                document.getElementById('balanceSpan').innerHTML = value + ' ETH';\n                contractBalance = value;\n            }).catch(console.log);\n        }\n        reflectBalance();\n    };\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///NHnr\n");

/***/ }),

/***/ "tlnb":
/*!********************!*\
  !*** ./src/abi.js ***!
  \********************/
/*! exports provided: abi, address */
/*! exports used: abi, address */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return abi; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return address; });\nvar address = \"0x0D642A4669C99F2276cf6b39a63a3CBE018c8329\";\n\nvar abi = [{\n    \"inputs\": [],\n    \"name\": \"close\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"number\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"createPerson\",\n    \"outputs\": [],\n    \"stateMutability\": \"payable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"creator\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"deletePerson\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"number\",\n        \"type\": \"uint256\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"senior\",\n        \"type\": \"bool\"\n    }],\n    \"name\": \"personCreated\",\n    \"type\": \"event\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"bool\",\n        \"name\": \"senior\",\n        \"type\": \"bool\"\n    }, {\n        \"indexed\": false,\n        \"internalType\": \"address\",\n        \"name\": \"deletedBy\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"personDeleted\",\n    \"type\": \"event\"\n}, {\n    \"anonymous\": false,\n    \"inputs\": [{\n        \"indexed\": false,\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }],\n    \"name\": \"saidHello\",\n    \"type\": \"event\"\n}, {\n    \"inputs\": [],\n    \"name\": \"withdrawAll\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"balance\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"index\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"getCreator\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"getPerson\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"number\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bool\",\n        \"name\": \"senior\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"mod\",\n        \"type\": \"uint256\"\n    }],\n    \"name\": \"getRandom\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"owner\",\n    \"outputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [{\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n    }],\n    \"name\": \"people\",\n    \"outputs\": [{\n        \"internalType\": \"uint256\",\n        \"name\": \"id\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n    }, {\n        \"internalType\": \"uint256\",\n        \"name\": \"number\",\n        \"type\": \"uint256\"\n    }, {\n        \"internalType\": \"bool\",\n        \"name\": \"senior\",\n        \"type\": \"bool\"\n    }],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n}, {\n    \"inputs\": [],\n    \"name\": \"sayHello\",\n    \"outputs\": [{\n        \"internalType\": \"string\",\n        \"name\": \"hello\",\n        \"type\": \"string\"\n    }],\n    \"stateMutability\": \"pure\",\n    \"type\": \"function\"\n}];\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///tlnb\n");

/***/ })

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgZDJjMmRhYTI1Yzg4MzA5NGFmMGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOzs7QUFHQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFLO0FBQ0w7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBMkIsMEJBQTBCLEVBQUU7QUFDdkQseUNBQWlDLGVBQWU7QUFDaEQ7QUFDQTtBQUNBOztBQUVBO0FBQ0EsOERBQXNELCtEQUErRDs7QUFFckg7QUFDQTs7QUFFQTtBQUNBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pIHtcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcbiBcdFx0fVxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0aTogbW9kdWxlSWQsXG4gXHRcdFx0bDogZmFsc2UsXG4gXHRcdFx0ZXhwb3J0czoge31cbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7XG4gXHRcdFx0XHRjb25maWd1cmFibGU6IGZhbHNlLFxuIFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcbiBcdFx0XHRcdGdldDogZ2V0dGVyXG4gXHRcdFx0fSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSBmdW5jdGlvbihtb2R1bGUpIHtcbiBcdFx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0RGVmYXVsdCgpIHsgcmV0dXJuIG1vZHVsZVsnZGVmYXVsdCddOyB9IDpcbiBcdFx0XHRmdW5jdGlvbiBnZXRNb2R1bGVFeHBvcnRzKCkgeyByZXR1cm4gbW9kdWxlOyB9O1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCAnYScsIGdldHRlcik7XG4gXHRcdHJldHVybiBnZXR0ZXI7XG4gXHR9O1xuXG4gXHQvLyBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGxcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubyA9IGZ1bmN0aW9uKG9iamVjdCwgcHJvcGVydHkpIHsgcmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmplY3QsIHByb3BlcnR5KTsgfTtcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiL1wiO1xuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IFwiTkhuclwiKTtcblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyB3ZWJwYWNrL2Jvb3RzdHJhcCBkMmMyZGFhMjVjODgzMDk0YWYwZCJdLCJzb3VyY2VSb290IjoiIn0=